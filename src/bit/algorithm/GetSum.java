package bit.algorithm;
/*
    【371 两整数之和】给你两个整数 a 和 b ，不使用 运算符 + 和 - ，计算并返回两整数之和。

    【示例 1】
            输入：a = 1, b = 2
            输出：3
    【示例 2】
            输入：a = 2, b = 3
            输出：5
    =============================================================================
    【解题思路】
             1、求无进位加法： a + b = a ^ b
             2、求进位：a + b 的进位 = a & b << 1

             100   无进位 100 ^ 101 = 001
             101   进位   100 & 101 << 1 = 1000

             无进位 001    继续相加  无进位 001 ^ 1000 = 1001
             进位   1000           进位 001 & 1000 << 1 = 00000

             进位为 0 停止计算
 */
public class GetSum {
    public int getSum(int a, int b) {
        if (a == 0)
            return b;
        int jinWei = (a & b) << 1;
        int wuJinWei = a ^ b;

        return getSum(jinWei, wuJinWei);
    }
}
